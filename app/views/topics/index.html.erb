<div id='container'>
	<div id='header'>
		<h1>CLUE?</h1><h2 id='date'><%= @day.date.to_s %></h2>
	</div>
	<div id='topics'>
		<div class='btn btn_l'></div>
		<% @topics.each do |topic| %>
		<div class='topic' data-id='<%= topic.id %>'>
			<%= image_tag topic.image_url %>
			<h2><%= topic.title %></h2>
		</div>
		<% end %>
		<div class='btn btn_r'></div>
		<hr>
	</div>
	<div id='statistics'>
		<div class='buttons'>
			<div class='btn' id='twitter_popularity'>Twitter</div>
			<div class='btn' id='facebook_popularity'>Facebook</div>
			<div class='btn' id='google_trend_index'>Google</div>
			<hr>
		</div>
		<div id='chart'></div>
	</div>
	<div id='articles'>
		<div class='btn btn_l'></div>
		<div id='article_list'>
			<%= render partial: 'topics/article', local: @articles, layout: false %>
		</div>
		<div class='btn btn_r'></div>
		<hr>
	</div>
	<div id='article-page'>
	<% if @articles.count == 1 %>
		Article 1 of 1
	<% else %>
		<p>Articles <span id='article-page-indicator'>1-<%= @articles.count %></span> of <%= @total_articles %> Total</p>
	<% end %>
	</div>
	<div id='footer'>Created by: Vince Li, Alex Drennen, Shomari Ewing, Dustin Snyder</footer>
</div>
<script type='text/javascript'>
	var topicId = <%= @topics[0].id %>;
	var dayId = <%= @day.id %>;
	var articlePage = 1;
	var articlePageTotal = <%= (@total_articles / @articles_per_page.to_f).ceil %>;
	var maxDate = '<%= @maxDay %>';
	var minDate = '<%= @minDay %>';

	var parseDate = d3.time.format("%Y-%m-%d").parse;
	var currentStatistic = 'twitter_popularity';

	function partialDataset() {
		var newSet = [];
		var newObj = {};
		for(var i=0; i < fullDataset.length; i++) {
			newObj = {};
			newObj['date'] = parseDate(fullDataset[i].date);
			newObj[currentStatistic] = fullDataset[i][currentStatistic]
			newSet.push(newObj);
		}
		return newSet;
	}

	var fullDataset=JSON.parse('<%= raw @dataset %>');
	var dataset = partialDataset();
	
	var margin = {top: 20, right: 30, bottom: 30, left: 50},
	    width = 865 - margin.left - margin.right,
	    height = 288 - margin.top - margin.bottom;

	var xScale = d3.time.scale()
		.range([0, width]);

	var yScale = d3.scale.linear()
		.range([height, 0]);

	var xAxis = d3.svg.axis()
		.scale(xScale)
		.orient('bottom');

	var yAxis = d3.svg.axis()
		.scale(yScale)
		.orient('left');

	var area = d3.svg.area()
		.x(function(d) { return xScale(d.date); })
		.y0(height)
		.y1(function(d) { return yScale(d[currentStatistic]); });

	var svg = d3.select("#chart").append("svg")
		.attr("width", width + margin.left + margin.right)
		.attr("height", height + margin.top + margin.bottom)
		.append("g")
		.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	populateGraph();

	function populateGraph() {
		d3.selectAll('.axis').remove();
		d3.selectAll('.area').remove();
		d3.selectAll('text').remove();

		xScale.domain(d3.extent(dataset, function(d) { return d.date; }));
		yScale.domain(d3.extent(dataset, function(d) { return d[currentStatistic]; }));

		svg.append("path")
			.datum(dataset)
			.attr("class", "area")
			.attr("d", area);

		svg.append("g")
			.attr("class", "x axis")
			.attr("transform", "translate(0," + height + ")")
			.call(xAxis);

		svg.append("g")
			.attr("class", "y axis")
			.call(yAxis)
			.append("text")
			.attr("transform", "rotate(-90)")
			.attr("y", 6)
			.attr("dy", ".71em")
			.style("text-anchor", "end")
			.text(currentStatistic.replace(/_/g, ' '));
		}
</script>
